{"version":3,"sources":["News.js","App.js","reportWebVitals.js","index.js"],"names":["News","title","author","date","description","link","photo","className","href","src","alt","width","App","useState","news","setNews","search","setSearch","query","setQuery","useEffect","getNews","a","fetch","response","json","data","console","log","articles","onSubmit","e","preventDefault","type","placeholder","aria-label","value","onChange","target","map","source","name","publishedAt","url","urlToImage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAmBeA,EAjBH,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAClD,OACI,sBAAKC,UAAU,WAAf,UACI,sBAAKA,UAAU,WAAf,UACA,6BAAKN,IACL,0CAAaC,KACb,oDAAuBC,KACvB,8BAAIC,EAAJ,IAAiB,mBAAGI,KAAMH,EAAT,gCAEjB,qBAAKE,UAAU,WAAf,SACA,qBAAKA,UAAU,mCAAmCE,IAAKH,EAAOI,IAAI,MAAOC,MAAM,gBC0C5EC,G,MAlDL,WAAK,IAAD,EAEYC,mBAAS,IAFrB,mBAELC,EAFK,KAECC,EAFD,OAGgBF,mBAAS,IAHzB,mBAGLG,EAHK,KAGGC,EAHH,OAIcJ,mBAAS,4BAJvB,mBAILK,EAJK,KAIEC,EAJF,KAMVC,qBAAW,WACPC,MACD,CAACH,IAEJ,IAAMG,EAAO,uCAAG,8BAAAC,EAAA,sEACWC,MAAM,uEADjB,cACNC,EADM,gBAEOA,EAASC,OAFhB,OAENC,EAFM,OAGZC,QAAQC,IAAIF,EAAKG,UACjBd,EAAQW,EAAKG,UAJD,2CAAH,qDAcb,OACI,sBAAKtB,UAAU,MAAf,UAEE,sBAAKA,UAAU,gEAAf,UACA,mBAAGA,UAAU,0BAA0BC,KAAK,cAA5C,yBACA,uBAAMD,UAAU,cAAcuB,SAVnB,SAAAC,GACfA,EAAEC,iBACFb,EAASH,IAQL,UACA,uBAAOT,UAAU,uBAAuB0B,KAAK,SAASC,YAAY,SAASC,aAAW,SAASC,MAAOpB,EAAQqB,SAd/F,SAAAN,GACnBd,EAAUc,EAAEO,OAAOF,UAcf,wBAAQ7B,UAAU,uCAAuC0B,KAAK,SAA9D,0BAIGnB,EAAKyB,KAAI,SAAAzB,GAAI,OACZ,cAAC,EAAD,CAEAb,MAAOa,EAAKb,MACZC,OAAQY,EAAK0B,OAAOC,KACpBtC,KAAMW,EAAK4B,YACXtC,YAAaU,EAAKV,YAClBC,KAAMS,EAAK6B,IACXrC,MAAOQ,EAAK8B,YANP9B,EAAKb,eC7BT4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.63daefb7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst News =({title, author, date, description, link, photo})=>{\r\n    return(\r\n        <div className=\"row news\">\r\n            <div className=\"col-md-6\">\r\n            <h3>{title}</h3>\r\n            <h6>Source: {author}</h6>\r\n            <h6>Publication Date: {date}</h6>\r\n            <p>{description} <a href={link}>Read Content</a></p>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n            <img className=\"img-fluid justify-content-center\" src={photo} alt=\"...\"  width=\"600px\"/>\r\n            \r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React, { useEffect, useState } from 'react'\nimport News from './News'\nimport './App.css'\n\nconst App=()=>{\n\n  const [news, setNews] = useState([])\n  const [search, setSearch] = useState('')\n  const [query, setQuery] = useState('top-headlines?country=ng')\n\n    useEffect( () =>{\n        getNews()\n    }, [query]);\n\n    const getNews = async ()=>{\n        const response = await fetch(`https://newsapi.org/v2/top-headlines?country=ng&apiKey=YOUR-API-KEY`)\n        const data = await response.json()\n        console.log(data.articles)\n        setNews(data.articles) \n    }\n    const updateSearch = e =>{\n      setSearch(e.target.value)\n    }\n    const getSearch =e =>{\n      e.preventDefault()\n      setQuery(search)\n    }\n\n    return(\n        <div className=\"App\">\n\n          <nav className=\"navbar navbar-light bg-dark fixed-top justify-content-between\">\n          <a className=\"navbar-brand text-light\" href=\"latest news\">Latest News</a>\n          <form className=\"form-inline\" onSubmit={getSearch}>\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" value={search} onChange={updateSearch} />\n          <button className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\">Search</button>\n          </form>\n          </nav>\n\n            {news.map(news =>(\n              <News\n              key={news.title}\n              title={news.title}\n              author={news.source.name}\n              date={news.publishedAt}\n              description={news.description}\n              link={news.url}\n              photo={news.urlToImage}\n             \n               />\n            ))}\n        </div>\n    )\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}